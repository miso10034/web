_________________________________
* 주문(장바구니) 입력 폼 페이지
- views 함수명: getCartInsertForm()
- cart_insert_form.html
- url 패턴 : cart_insert_form
_________________________________

-- 사용할 데이터
* 아이디 : a001
* 주문번호 : 2005050500002
* 상품코드 : P201000019
* 주문수량 : 입력
_________________________________
* 주문(장바구니) 입력 처리
- views 함수명: getCartInsert()
- html 파일은 없음
  > HttpResponse()
- url 패턴 : cart_insert
_________________________________

db와 연결하기
1. 해당 앱 models.py에서 class와 Meta 데이터 작성


===== secondapp에서 cart 테이블 CRUD 실습 =====
<순서>
1. config /settings.py에서 
 -> DATABASE_ROUTERS = [
      oracleapp.router.DBRouter,
      ### app 등록
      secondapp.router.DBRouter,
 ]

 2. secondapp에 router.py 파일 생성
 -> oracle에 있는 router.py 파일 복사하여 사용
 -> router.py 파일 열어서 
    : app_label의 값을 secondapp으로 수정
    : return에 있는 값은 oracle 별칭이기에 그대로 사용

3. models.py에 Cart 클래스 생성
  -> 생성 후 : python manage.py makemigrations secondapp 실행
            : python manage.py migrate

4. views.py에 Cart import하기
5. 프로그램 진행

___________member join cart____________

* 주문(장바구니) 상세 페이지
- views 함수명: getMemCartView()
- html : cart_view.html
  : 회원아이디, 회원이름, 상품코드, 주문수량, 회원주소1
- url 패턴 : mem_cart_view
_________________________________

* 회원 상세 페이지 처리
- views 함수명: getMemView()
- html : mem_view.html
  : 회원아이디, 회원패스워드, 회원이름, 회원주소1
- url 패턴 : memview
(힌트) 조회하는 값은 회원정보 밖에 없음
_________________________________