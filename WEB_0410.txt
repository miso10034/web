<BootStarp 다운로드 URL>
https://getbootstrap.com
프론트엔드 디자인 사이트

- bootstrap.min.css -> 다운로드 방식
-> 위의 CDN
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">

- bootstrap.bundle.min.js
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe" crossorigin="anonymous"></script>
-> 두개는 한 세트

_________bootstrap_________
- views 함수명 : bootstrap01()
- 01_bootstrap.html생성
- url 패턴 : bootstrap01

bootstrap적용 순서
1. title 태그 밑에 link 태그 안에 bootstrap.min.css 적용
2. title 아래 script 태그안에 jQuery 적용하기
3. 맨 밑에 script태그 안에 bootstrap js 적용하기

____________________________
- views 함수명 : bootstrap_table()
- 02_bootstrap_table.html생성
- url 패턴 : bootstrap_table

____________________________
- views 함수명 : bootstrap_form()
- 03_bootstrap_form.html생성
- url 패턴 : bootstrap_form

____________________________

system / dbdb

<사용자(DB) 생성하기>
Create User 계정명 Identified By 패스워드;
- Create User gwangju_a Identified By dbdb;

<사용자 패스워드 수정>
Alter user gwangju_a Identified By 패스워드;

<사용자 삭제하기>
Drop user gwangju_a;

<사용자 생성 후 권한 부여하기>
Grant Connect, Resource, DBA to gwangju_a;

<사용자 권한 회수하기>
Revoke DBA From gwangju_a;

데이터프레임 : index, column, value으로 이뤄진 데이터를 2차원형태로 관리하기위한 메모리 공간
테이블 : 행, 열로 구성된 2차원 데이터를 관리하기 위한 메모리 공간
테이블 정의서 : 엔티티목록에 도출된 테이블들의 컬럼 및 속성정보까지를 정의한 문서

논리적설계 : 한글
물리적설계 : 영어/ 실제 데이터베이스에 적용되는 것 이므로 영어로 작성하기

_________(개발)프로젝트 순서_________

--> 개발은 무엇을 만들지 "주제"가 정해짐

1. 계획수립
	- 주제선정 : 컴퓨터 판매 쇼핑몰 구축
	- 수행기간 : 언제부터~언제까지
	- 일정계획 수립 -> ** 산출물 포함(일정표)
	- 인원계획수립 (몇명, 역할-PM(프로젝트매니저), PL(프로젝트리더), 개발, 디자인...)
	- 예산수립 : 비용산정(인건비, 개발장비비, 부식비...)
	장소, 비용, 도구, 인원
	- 고객여부 : 내부개발(회사자체에서 주제발굴 개발)
	    	    : 외부개발(고객이 요청한 주제 개발)

2. 요구사항 수렴
	- 주제에 맞게 어떻게 만들어 갈 것인지에 대한 스토리텔링 진행
	- 미팅 내용은 정리되지 않은 상태로 정리됨
	
3. 요구분석
	- 수렴된 요구사항을 정리(카테고리별 > 메뉴별로 구분작업)
	- 사이트맵(site map)이 만들어짐
	- 메뉴구조도가 만들어짐 : **산출물
	- 메뉴에 대한 상세한 항목들이 정의됨

4. 분석설계(순차적 진행)
	- DB설계 : ** Table 설계(ERD, 테이블정의서)
	- 화면설계 : ** 화면정의서(메뉴구조에 맞게 화면 그리기)
	- System 설계  : ** 서버선택(웹서버, DB서버, 네트워크구성 등)
			     : ** 프로그램 선택(Front and Back end)
			     : ** 개발 Tool 선택
			     : ** 사용 라이브러리

5. 구현(개발)
	- System구출 : DB구축, 웹서버 구축
 	- UI 개발  : 화면 개발(html,css,js 등등) -> 웹디자이너
		    : 화면 시안(demo) 개발 -> index페이지 sub페이지 (각 3개정도씩)
	- 프로그램 개발 : 개발자
	
6. 테스트
7. 운영유지보수


__ Database 설정 : settings.py
__ APP 생성 : oracleapp
   > django-admin startapp oracleapp

____________________________
- views 함수명 : index()
- url 패턴 : index도 추가
- HttpResponse로 "oracle페이지 입니다." 메시지만 보이게
- index.html 파일 생성하기
 -- 파일 내용은 "oracle index 페이지 입니다."

* 형상만들때
컬럼명 테이블명 동일하게 만들어주기







